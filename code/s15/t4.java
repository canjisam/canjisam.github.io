package s15;

import java.util.*;

public class t4 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        // 读取测试用例的数量
        int n = sc.nextInt();
        
        // 处理每个测试用例
        for (int i = 0; i < n; i++) {
            // 读取每种类型的座位数量和乘客数量
            int a2 = sc.nextInt(); // 两个座位的宿舍数量
            int a3 = sc.nextInt(); // 三个座位的宿舍数量
            int a4 = sc.nextInt(); // 四个座位的宿舍数量
            int b4 = sc.nextInt(); // 需要四个座位的桌子数
            int b6 = sc.nextInt(); // 需要六个座位的桌子数

            int ans = 0; // 初始化可以乘坐的最大人数

            // 尽可能地安排所有座位坐满的情况
            // 安排四个座位的宿舍和需要四个座位的桌子
            while (b4 > 0 && a4 >= 1) {
                b4--; // 减少一个需要四个座位的桌子
                a4--; // 减少一个四个座位的宿舍
                ans += 4; // 增加四个座位
            }
            
            // 安排两个座位的宿舍和需要四个座位的桌子（两个两座宿舍）
            while (b4 > 0 && a2 >= 2) {
                b4--; // 减少一个需要四个座位的桌子
                a2 -= 2; // 减少两个两个座位的宿舍
                ans += 4; // 增加四个座位
            }
            
            // 安排四个座位的宿舍、两个座位的宿舍和需要六个座位的桌子（一个四座宿舍 + 一个两座宿舍）
            while (b6 > 0 && a4 >= 1 && a2 >= 1) {
                b6--; // 减少一个需要六个座位的桌子
                a4--; // 减少一个四个座位的宿舍
                a2--; // 减少一个两个座位的宿舍
                ans += 6; // 增加六个座位
            }
            
            // 安排三个座位的宿舍和需要六个座位的桌子（两个三座宿舍）
            while (b6 > 0 && a3 >= 2) {
                b6--; // 减少一个需要六个座位的桌子
                a3 -= 2; // 减少两个三个座位的宿舍
                ans += 6; // 增加六个座位
            }
            
            // 安排两个座位的宿舍和需要六个座位的桌子（三个两座宿舍）
            while (b6 > 0 && a2 >= 3) {
                b6--; // 减少一个需要六个座位的桌子
                a2 -= 3; // 减少三个两个座位的宿舍
                ans += 6; // 增加六个座位
            }

            // 处理座位坐不满的情况
            // 空一座位
            // 安排三个座位的宿舍、两个座位的宿舍和需要六个座位的桌子（一个三座宿舍 + 一个两座宿舍）
            while (b6 > 0 && a3 >= 1 && a2 >= 1) {
                b6--; // 减少一个需要六个座位的桌子
                a3--; // 减少一个三个座位的宿舍
                a2--; // 减少一个两个座位的宿舍
                ans += 5; // 增加五个座位
            }
            
            // 安排三个座位的宿舍和需要四个座位的桌子
            while (b4 > 0 && a3 >= 1) {
                b4--; // 减少一个需要四个座位的桌子
                a3--; // 减少一个三个座位的宿舍
                ans += 3; // 增加三个座位
            }
            
            // 空俩座位
            // 安排四个座位的宿舍和需要六个座位的桌子
            while (b6 > 0 && a4 >= 1) {
                b6--; // 减少一个需要六个座位的桌子
                a4--; // 减少一个四个座位的宿舍
                ans += 4; // 增加四个座位
            }
            
            // 安排两个座位的宿舍和需要六个座位的桌子（两个两座宿舍）
            while (b6 > 0 && a2 >= 2) {
                b6--; // 减少一个需要六个座位的桌子
                a2 -= 2; // 减少两个两个座位的宿舍
                ans += 4; // 增加四个座位
            }
            
            // 安排两个座位的宿舍和需要四个座位的桌子
            while (b4 > 0 && a2 >= 1) {
                b4--; // 减少一个需要四个座位的桌子
                a2--; // 减少一个两个座位的宿舍
                ans += 2; // 增加两个座位
            }
            
            // 空仨座位
            // 安排三个座位的宿舍和需要六个座位的桌子
            while (b6 > 0 && a3 >= 1) {
                b6--; // 减少一个需要六个座位的桌子
                a3--; // 减少一个三个座位的宿舍
                ans += 3; // 增加三个座位
            }
            
            // 空四座位
            // 安排两个座位的宿舍和需要六个座位的桌子
            while (b6 > 0 && a2 >= 1) {
                b6--; // 减少一个需要六个座位的桌子
                a2--; // 减少一个两个座位的宿舍
                ans += 2; // 增加两个座位
            }
            
            // 输出当前测试用例的结果
            System.out.println(ans);
        }

        // 关闭Scanner对象以释放资源
        sc.close();
    }
}



